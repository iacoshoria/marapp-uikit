// Name:            Tab
// Description:     Defines styles for a tabbed navigation
// Note:            Soon to-be-deprecated in favor of tab-new
//
// Component:       `ng-tab`
//
// Modifiers:       `ng-tab-flip`
//                  `ng-tab-center`
//                  `ng-tab-grid`
//                  `ng-tab-bottom`
//                  `ng-tab-left`
//                  `ng-tab-right`
//                  `ng-tab-responsive`
//
// States:          `ng-active`
//                  `ng-disabled`
//
// Markup:
//
// <!-- ng-tab -->
// <ul class="ng-tab" data-ng-tab>
//     <li class="ng-active"><a href=""></a></li>
//     <li><a href=""></a></li>
// </ul>
//
// ========================================================================


// Variables
// ========================================================================

$tab-border:                                    $global-border !default;
$tab-border-width:                              1px !default;
$tab-padding-horizontal:                        12px !default;
$tab-padding-vertical:                          8px !default;
$tab-padding-top:                               $tab-padding-vertical !default;
$tab-padding-bottom:                            $tab-padding-vertical !default;
$tab-margin-horizontal:                         5px !default;
$tab-margin-vertical:                           5px !default;
$tab-color:                                     $global-link-color !default;
$tab-background:                                $global-default-muted-background !default;
$tab-text-shadow:                               $global-text-shadow !default;
$tab-hover-border:                              $global-border !default;
$tab-hover-background:                          $global-default-background !default;
$tab-hover-color:                               $global-link-hover-color !default;
$tab-active-border:                             $global-border !default;
$tab-active-background:                         $global-background !default;
$tab-active-color:                              $global-color !default;
$tab-disabled-color:                            $global-muted-color !default;

.ng-tab-border {background: $tab-border;color: #fff}
.ng-tab-color {background: $tab-color;color: #fff}
.ng-tab-text-shadow {background: $tab-text-shadow;}
.ng-tab-hover-border {background: $tab-hover-border;color: #fff}
.ng-tab-hover-background {background: $tab-hover-background;}
.ng-tab-hover-color {background: $tab-hover-color;color: #fff}
.ng-tab-background {background: $tab-background;}
.ng-tab-active-border {background: $tab-active-border;color: #fff}
.ng-tab-active-background {background: $tab-active-background;}
.ng-tab-active-color {background: $tab-active-color;color: #fff}
.ng-tab-disabled-color {background: $tab-disabled-color;color: #fff}


/* ========================================================================
   Component: Tab
 ========================================================================== */

.ng-tab {
    margin: 0;
    padding: 0;
    list-style: none;
    border-bottom: $tab-border-width solid $tab-border;
}

/*
 * Micro clearfix on the deepest container
 */

.ng-tab:before,
.ng-tab:after {
    content: " ";
    display: table;
}

.ng-tab:after { clear: both; }

/*
 * Items
 * 1. Create position context for dropdowns
 */

.ng-tab > li {
    margin-bottom: $tab-border-width * -1;
    float: left;
    /* 1 */
    position: relative;
}

.ng-tab > li > a {
    display: block;
    padding: $tab-padding-top $tab-padding-horizontal $tab-padding-bottom $tab-padding-horizontal;
    border: $tab-border-width solid $tab-border;
    border-bottom-width: 0;
    color: $tab-color;
    text-decoration: none;
    border-radius: $global-border-radius $global-border-radius 0 0;
    @if $tab-text-shadow {
        text-shadow: 0 1px 0 $tab-text-shadow;
    }
    background: $tab-background;
    margin-bottom: $tab-border-width;
    padding-bottom: $tab-padding-bottom - $tab-border-width;
    @include hook-tab();
}

.ng-tab > li:nth-child(n+2) > a { margin-left: $tab-margin-horizontal; }

/*
 * Hover
 * 1. Apply hover style also to focus state
 * 2. Also apply if dropdown is opened
 * 3. Remove default focus style
 */

.ng-tab > li > a:hover,
.ng-tab > li > a:focus, // 1
.ng-tab > li.ng-open > a { // 2
    border-color: $tab-hover-border;
    background: $tab-hover-background;
    color: $tab-hover-color;
    /* 3 */
    outline: none;
    @include hook-tab-hover();
}

.ng-tab > li:not(.ng-active) > a:hover,
.ng-tab > li:not(.ng-active) > a:focus,
.ng-tab > li.ng-open:not(.ng-active) > a {
    margin-bottom: $tab-border-width;
    padding-bottom: $tab-padding-bottom - $tab-border-width;
}

/* Active */
.ng-tab > li.ng-active > a {
    border-color: $tab-active-border;
    border-bottom-color: transparent;
    background: $tab-active-background;
    color: $tab-active-color;
    margin-bottom: 0;
    padding-bottom: $tab-padding-bottom;
    @include hook-tab-active();
}

/* Disabled */
.ng-tab > li.ng-disabled > a {
    color: $tab-disabled-color;
    cursor: auto;
    @include hook-tab-disabled();
}

.ng-tab > li.ng-disabled > a:hover,
.ng-tab > li.ng-disabled > a:focus,
.ng-tab > li.ng-disabled.ng-active > a {
    background: none;
    border-color: transparent;
}


/* Modifier: 'tab-flip'
 ========================================================================== */

.ng-tab-flip > li { float: right; }

.ng-tab-flip > li:nth-child(n+2) > a {
    margin-left: 0;
    margin-right: $tab-margin-horizontal;
}


/* Modifier: 'tab-responsive'
 ========================================================================== */

.ng-tab > li.ng-tab-responsive > a {
    margin-left: 0;
    margin-right: 0;
}

/*
 * Icon
 */

.ng-tab-responsive > a:before {
    content: "#{$icn-menu}\00a0";
    font-family: $icon-font-family;
}


/* Modifier: 'tab-center'
 ========================================================================== */

.ng-tab-center { border-bottom: $tab-border-width solid $tab-border; }

.ng-tab-center-bottom {
    border-bottom: none;
    border-top: $tab-border-width solid $tab-border;
}

.ng-tab-center:before,
.ng-tab-center:after {
    content: " ";
    display: table;
}

.ng-tab-center:after { clear: both; }


/*
 * 1. Using `right` to prevent vertical scrollbar caused by centering if to many tabs
 */

.ng-tab-center .ng-tab {
    position: relative;
    right: 50%;
    border: none;
    float: right;
}

.ng-tab-center .ng-tab > li {
    position: relative;
    right: -50%;
}

.ng-tab-center .ng-tab > li > a { text-align: center; }


/* Modifier: 'tab-bottom'
 ========================================================================== */

.ng-tab-bottom {
    border-top: $tab-border-width solid $tab-border;
    border-bottom: none;
}

.ng-tab-bottom > li {
    margin-top: $tab-border-width * -1;
    margin-bottom: 0;
}

.ng-tab-bottom > li > a {
    padding-top: $tab-padding-bottom;
    padding-bottom: $tab-padding-top;
    border-bottom-width: $tab-border-width;
    border-top-width: 0;
}

.ng-tab-bottom > li:not(.ng-active) > a,
.ng-tab-bottom > li:not(.ng-active) > a:hover,
.ng-tab-bottom > li:not(.ng-active) > a:focus,
.ng-tab-bottom > li.ng-open:not(.ng-active) > a {
    margin-bottom: 0;
    margin-top: $tab-border-width;
    padding-bottom: $tab-padding-top;
    padding-top: $tab-padding-bottom - $tab-border-width;
}

.ng-tab-bottom > li.ng-active > a {
    border-top-color: transparent;
    border-bottom-color: $tab-active-border;
}


/* Modifier: 'tab-grid'
 ========================================================================== */

/*
 * 1. Create position context to prevent hidden border because of negative `z-index`
 */

.ng-tab-grid {
    margin-left: $tab-margin-horizontal * -1;
    border-bottom: none;
    /* 1 */
    position: relative;
    z-index: 0;
}

.ng-tab-grid:before {
    display: block;
    position: absolute;
    left: $tab-margin-horizontal;
    right: 0;
    bottom: $tab-border-width * -1;
    border-top: $tab-border-width solid $tab-border;
    /* 1 */
    z-index: -1;
}

.ng-tab-grid > li:first-child > a { margin-left: $tab-margin-horizontal; }

.ng-tab-grid > li > a { text-align: center; }

/*
 * If `ng-tab-bottom`
 */

.ng-tab-grid.ng-tab-bottom { border-top: none; }
.ng-tab-grid.ng-tab-bottom:before {
    top: $tab-border-width * -1;
    bottom: auto;
}

/* Modifier: 'tab-left', 'tab-right'
 ========================================================================== */

/* Only tablets and desktops */
@media (min-width: $breakpoint-medium) {

    .ng-tab-left,
    .ng-tab-right { border-bottom: none; }

    .ng-tab-left > li,
    .ng-tab-right > li {
        margin-bottom: 0;
        float: none;
    }

    .ng-tab-left > li > a,
    .ng-tab-right > li > a {
        padding-top: $tab-padding-vertical;
        padding-bottom: $tab-padding-vertical;
    }

    .ng-tab-left > li:nth-child(n+2) > a,
    .ng-tab-right > li:nth-child(n+2) > a {
        margin-left: 0;
        margin-top: $tab-margin-vertical;
    }

    .ng-tab-left > li.ng-active > a,
    .ng-tab-right > li.ng-active > a { border-color: $tab-active-border; }

    /*
     * Modifier: 'tab-left'
     */

    .ng-tab-left { border-right: $tab-border-width solid $tab-border; }
    .ng-tab-left > li { margin-right: $tab-border-width * -1; }
    .ng-tab-left > li > a {
        border-bottom-width: $tab-border-width;
        border-right-width: 0;
    }
    .ng-tab-left > li:not(.ng-active) > a,
    .ng-tab-left > li:not(.ng-active) > a:hover,
    .ng-tab-left > li:not(.ng-active) > a:focus {
        margin-bottom: 0;
        margin-right: $tab-border-width;
        padding-bottom: $tab-padding-vertical;
        padding-right: $tab-padding-horizontal - $tab-border-width;
    }
    .ng-tab-left > li.ng-active > a { border-right-color: transparent; }

    /*
     * Modifier: 'tab-right'
     */

    .ng-tab-right { border-left: $tab-border-width solid $tab-border; }
    .ng-tab-right > li { margin-left: $tab-border-width * -1; }
    .ng-tab-right > li > a {
        border-bottom-width: $tab-border-width;
        border-left-width: 0;
    }
    .ng-tab-right > li:not(.ng-active) > a,
    .ng-tab-right > li:not(.ng-active) > a:hover,
    .ng-tab-right > li:not(.ng-active) > a:focus {
        margin-bottom: 0;
        margin-left: $tab-border-width;
        padding-bottom: $tab-padding-vertical;
        padding-left: $tab-padding-horizontal - $tab-border-width;
    }
    .ng-tab-right > li.ng-active > a { border-left-color: transparent; }
}

.ng-tab > li.ng-disabled > a:hover, .ng-tabbar > li.ng-disabled > a:hover,
.ng-tab > li.ng-disabled > a:focus, .ng-tabbar > li.ng-disabled > a:focus,
.ng-tab > li.ng-disabled.ng-active > a, .ng-tabbar > li.ng-disabled.ng-active > a {
    border-color: $tab-border;
}
.ng-tab-bottom > li > a {
    border-radius: 0 0 $global-border-radius $global-border-radius;
}

.ng-tabbar {
    @extend .ng-tab;
    @extend .ng-tab-grid;
    margin-left: 0;
    border: $tab-border-width solid $tab-border;

    > li > a {
        border: 0;
        border-left: $tab-border-width solid $tab-border;
        border-radius: 0;
    }
    > li:first-child > a {
        margin-left: 0;
        border-left: 0;
    }
    >li:nth-child(n+2) > a {
        margin-left: 0;
    }
}

.ng-tabbar-attached {
    border-left:0;
    border-right:0;
    border-radius:0;
}

@media (min-width: $breakpoint-medium) {

    /*
     * Modifier: `ng-tab-left'
     */

    .ng-tab-left > li > a { border-radius: $global-border-radius 0 0 $global-border-radius; }

    /*
     * Modifier: `ng-tab-right'
     */

    .ng-tab-right > li > a { border-radius: 0 $global-border-radius $global-border-radius 0; }

}

// Hooks
// ========================================================================

@include hook-tab-misc();

// @mixin hook-tab(){}
// @mixin hook-tab-hover(){}
// @mixin hook-tab-active(){}
// @mixin hook-tab-disabled(){}
// @mixin hook-tab-misc(){}
