// Name:            Slider
// Description:     Defines styles for a horizontal slider
//
// Component:       `ng-slider`
//
// Sub-objects:     `ng-slider-container`
//
// Modifier:        `ng-slider-fullscreen`
//
// States:          `ng-drag`
//
// Markup:
//
// <!-- ng-slider -->
// <div data-ng-slider>
//     <div class="ng-slider-container">
//         <ul class="ng-slider">
//             <li></li>
//             <li></li>
//         </ul>
//     </div>
// </div>
//
// ========================================================================


/* ========================================================================
   Component: Slider
 ========================================================================== */

/*
 * 1. Create position context
 * 2. Create stacking context to prevent z-index issues with other components
 * 3. Deactivate browser history navigation in IE11
 */

.ng-slider {
    /* 1 */
    position: relative;
    /* 2 */
    z-index: 0;
    /* 3 */
    touch-action: pan-y;

    @media (max-width: $breakpoint-medium-max) {
        left: 25px;
    }
}

/*
 * 1. Reset list style without interfering with grid
 */

.ng-slider:not(.ng-grid) {
    /* 1 */
    margin: 0;
    padding: 0;
    list-style: none;
}

/*
 * Sub-object item
 * 1. Position items above each other
 */

.ng-slider > * {
    /* 1 */
    position: absolute;
    top: 0;
    left: 0;
}

/*
 * Clip child elements
 */

.ng-slider-container { overflow: hidden; }

/*
 * Dragged
 */

.ng-slider:not(.ng-drag) {
    -webkit-transition: -webkit-transform 200ms linear;
    transition: transform 200ms linear;
}

/*
 * 1. Makes text unselectable
 */

.ng-slider.ng-drag {
    cursor: col-resize;
    /* 1 */
    -moz-user-select: none;
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/*
 * 1. Prevents images and links from being dragged (default browser behavior)
 * 2. Disables the default callout shown when you touch and hold a touch target
 * Currently only works in Webkit
 */

.ng-slider a,
.ng-slider img {
    /* 1 */
    -webkit-user-drag: none;
    user-drag: none;
    /* 2 */
    -webkit-touch-callout: none;
}

/*
 * 1. Prevents images and links from being dragged in Firefox
 */

.ng-slider img { pointer-events: none; }


/* Modifier: `ng-slider-fullscreen`
 ========================================================================== */

.ng-slider-fullscreen,
.ng-slider-fullscreen > li { height: 100vh; }


.ng-slider-container {  }

/**
Slider

This is the most Basic Implementation of a Slider/Carousel, and is the basis of the Content Carousel.

Markup:
<div class="ng-slider-container ng-slidenav-position" data-ng-slider>
    <ul class="ng-slider ng-grid-width-small-1-3">
        <li>
            <img src="http://lorempixel.com/400/400/" width="400" height="400" />
        </li>
        <li>
            <img src="http://lorempixel.com/400/400/" width="400" height="400" />
        </li>
        <li>
            <img src="http://lorempixel.com/400/400/" width="400" height="400" />
        </li>
    </ul>
    <a href="#" class="ng-slidenav ng-slidenav-contrast ng-slidenav-previous" data-ng-slider-item="previous"></a>
    <a href="#" class="ng-slidenav ng-slidenav-contrast ng-slidenav-next" data-ng-slider-item="next"></a>
</div>

Styleguide Components.ContentCarousel.1
*/

// Hooks
// ========================================================================

@include hook-slider-misc();

// @mixin hook-slider-misc() {}